{"version":3,"sources":["gifs/Rain.svg","gifs/Thunderstorm.svg","gifs/Clouds.svg","gifs/Snow.svg","gifs/Drizzle.svg","gifs/Clear.svg","Components/SearchBar.js","gifs/gifExport.js","Components/WeatherGif.js","Components/MainCard.js","Components/toggle-switch/ToggleSwitch.js","App.js","index.js"],"names":["module","exports","SearchBar","props","id","type","onKeyDown","e","key","searchFunction","currentTarget","value","placeholder","gifs","Rain","src","RainIcon","alt","Thunderstorm","ThunderstormIcon","Clouds","CloudsIcon","Snow","SnowIcon","Drizzle","DrizzleIcon","Clear","ClearIcon","WeatherGif","iconDescription","MainCard","className","data","name","str","splitStr","split","i","length","charAt","toUpperCase","substring","join","capitalizeFirstLetter","description","isTempC","temp","toFixed","feelsLike","ToggleSwitch","this","optionOneString","onClick","toggleFunction","optionTwoString","React","Component","App","state","loading","weatherData","city","setState","fetch","response","json","allData","newWeatherData","sys","country","main","feels_like","weather","console","log","copy","mainContent","getMainContent","toggleTemp","fetchData","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.926722d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rain.d235ab65.svg\";","module.exports = __webpack_public_path__ + \"static/media/Thunderstorm.7142c78b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Clouds.109368f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Snow.67d63a14.svg\";","module.exports = __webpack_public_path__ + \"static/media/Drizzle.f134a51c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Clear.7f93fbdb.svg\";","import React from 'react'\n\nfunction SearchBar(props) {\n    function onKeyPressed(e) {\n        if (e.key === 'Enter') {\n            props.searchFunction(e.currentTarget.value);\n            e.currentTarget.value = \"\";\n        }\n    }\n\n    return (\n        <div id=\"search-container\">\n            <input\n                type=\"text\"\n                id=\"search-bar\"\n                onKeyDown={onKeyPressed}\n                placeholder=\"Enter city name\"\n            >\n            </input>\n        </div>\n    )\n}\n\nexport default SearchBar","import React from 'react'\n\nimport RainIcon from './Rain.svg'\nimport ThunderstormIcon from './Thunderstorm.svg'\nimport CloudsIcon from './Clouds.svg'\nimport SnowIcon from './Snow.svg'\nimport DrizzleIcon from './Drizzle.svg'\nimport ClearIcon from './Clear.svg'\n\n//list of possible descriptions: Rain, Thunderstorm, Drizzle, Snow, Clouds, Clear/Else case\nconst gifs = {\n    Rain: <img src={RainIcon} alt=\"\" />,\n    Thunderstorm: <img src={ThunderstormIcon} alt=\"\" />,\n    Clouds: <img src={CloudsIcon} alt=\"\" />,\n    Snow: <img src={SnowIcon} alt=\"\" />,\n    Drizzle: <img src={DrizzleIcon} alt=\"\" />,\n    Clear: <img src={ClearIcon} alt=\"\" />\n};\n\nexport default gifs","import React from \"react\";\nimport gifs from \"../gifs/gifExport\";\n\nfunction WeatherGif(props) {\n  if (gifs[props.iconDescription]) {\n    return <div id=\"gif\">{gifs[props.iconDescription]}</div>;\n  } else {\n    return <div id=\"gif\">{gifs[\"Clear\"]}</div>;\n  }\n}\n\nexport default WeatherGif;\n","import React from \"react\";\n\nimport WeatherGif from \"./WeatherGif\";\n\nfunction MainCard(props) {\n  function capitalizeFirstLetter(str) {\n    var splitStr = str.split(\" \");\n    for (var i = 0; i < splitStr.length; i++) {\n      splitStr[i] =\n        splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    return splitStr.join(\" \");\n  }\n\n  return (\n    <div id=\"weather-card\">\n      <div className=\"city\">{props.data.name}</div>\n      <div className=\"info-container\">\n        <div className=\"weather-info\">\n          <WeatherGif iconDescription={props.data.iconDescription} />\n          <div className=\"description\">\n            {capitalizeFirstLetter(props.data.description)}\n          </div>\n        </div>\n        <div className=\"temp-info\">\n          <div className=\"temp\">\n            {props.isTempC\n              ? props.data.temp + \" 째C\"\n              : ((props.data.temp * 9) / 5 + 32).toFixed(1) + \" 째F\"}\n          </div>\n          <div className=\"feels-like\">\n            Feels Like:{\" \"}\n            {props.isTempC\n              ? props.data.feelsLike + \" 째C\"\n              : ((props.data.feelsLike * 9) / 5 + 32).toFixed(1) + \" 째F\"}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainCard;\n","import React from \"react\";\nimport \"./toggle-switch.css\";\n\nclass ToggleSwitch extends React.Component {\n  render() {\n    return (\n      <div className=\"toggle-switch\">\n        <div className=\"toggle-switch-option\">{this.props.optionOneString}</div>\n        <label className=\"switch\">\n          <input type=\"checkbox\" />\n          <span\n            className=\"slider round\"\n            onClick={\n              this.props.toggleFunction\n                ? () => this.props.toggleFunction()\n                : null\n            }\n          ></span>\n        </label>\n        <div className=\"toggle-switch-option\">{this.props.optionTwoString}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToggleSwitch;\n","import React from \"react\";\n\nimport SearchBar from \"./Components/SearchBar\";\nimport MainCard from \"./Components/MainCard\";\nimport ToggleSwitch from \"./Components/toggle-switch/ToggleSwitch\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isTempC: true,\n      loading: false,\n      weatherData: false,\n    };\n  }\n\n  async fetchData(city) {\n    this.setState({\n      isTempC: this.state.isTempC,\n      loading: true,\n    });\n    try {\n      const response = await fetch(\n        \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n          city +\n          \"&appid=1ba3cf989b72215565491bbe5ea27fa3\"\n      );\n      const allData = await response.json();\n      const newWeatherData = {\n        name: allData.name + \", \" + allData.sys.country,\n        temp: (allData.main.temp - 273.15).toFixed(1), //in C\n        feelsLike: (allData.main.feels_like - 273.15).toFixed(1),\n        iconDescription: allData.weather[0].main,\n        description: allData.weather[0].description,\n      };\n      this.setState({\n        isTempC: this.state.isTempC,\n        loading: false,\n        weatherData: newWeatherData,\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({\n        isTempC: this.state.isTempC,\n        city: city,\n        loading: false,\n        weatherData: null,\n      });\n    }\n  }\n\n  getMainContent() {\n    if (this.state.loading) {\n      return <div className=\"search-message\">Loading...</div>;\n    } else if (this.state.weatherData) {\n      return (\n        <MainCard data={this.state.weatherData} isTempC={this.state.isTempC} />\n      );\n    } else if (this.state.city) {\n      console.log(\"his.state.city: \", this.state.city);\n      return (\n        <div className=\"search-message\">\n          Oops, '{this.state.city}' was not found\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  toggleTemp() {\n    const copy = this.state;\n    console.log(\"copy: \", copy);\n    copy.isTempC = !copy.isTempC;\n    console.log(copy.isTempC);\n    this.setState(copy);\n  }\n\n  render() {\n    let mainContent = this.getMainContent();\n    return (\n      <div id=\"react-container\">\n        <ToggleSwitch\n          optionOneString={\"째C\"}\n          optionTwoString={\"째F\"}\n          toggleFunction={() => this.toggleTemp()}\n        />\n        <div id=\"main\">\n          <SearchBar searchFunction={(city) => this.fetchData(city)} />\n          {mainContent}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './App';\nimport './../node_modules/minireset.css';\nimport './style.css';\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}